{
  "resolvedId": "/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/n3/src/N3StreamParser.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n",
      "start": 1701230370639,
      "end": 1701230370656,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701230370656,
      "end": 1701230370656,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1701230370656,
      "end": 1701230370657,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1701230370657,
      "end": 1701230370657,
      "order": "normal"
    }
  ]
}
