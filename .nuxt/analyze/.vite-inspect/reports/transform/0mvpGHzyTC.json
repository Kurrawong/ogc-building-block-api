{
  "resolvedId": "/Users/hjohns/workspace/kurrawong/ogc-building-block-api/components/common/Form.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ce81e14\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"form\",\n  style: {\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-h3 mb-5 mt-2\"\n}\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { colspan: \"2\" }\nconst _hoisted_5 = { style: {\"white-space\":\"nowrap\"} }\nconst _hoisted_6 = [\"href\", \"title\"]\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = [\"title\"]\nconst _hoisted_9 = { key: 1 }\n\nimport type { Form, HeaderLink } from '~/lib/prez.d';\nimport { template } from '~/helpers/str';\nimport registry from './widgets/registry';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Form',\n  props: {\n    form: {},\n    formTitle: {},\n    headerTitle: {},\n    excludeFields: {},\n    fields: {},\n    info: { type: Boolean },\n    links: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\nconst excludeFields = props.excludeFields ? props.excludeFields : [/^prez:./];\n\nconst customWidgets:Record<string, boolean>= {};\nconst fields = (props.fields ? props.fields : Object.keys(props.form.formHeaders))\n  .filter(field=>{\n    // check the field to output is available\n    if(!(field in props.form.formHeaders) || !(field in props.form.fields)) {\n      console.warn(`${field} not found in form\\n(${Object.keys(props.form.formHeaders)})`)\n      return false;\n    }\n    // if this field is in the registry, then only exclude if we have an exact match\n    if(field in registry) {\n      if((excludeFields as string[]).indexOf(field) >= 0) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      // check it doesn't match one of the exclude fields\n      for(const idx in excludeFields) {\n        if(field.match(excludeFields[idx])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n\nconst isSubForm = (field:string) => {\n  return Array.isArray(props.form.fields[field]) && typeof(props.form.fields[field][0]) == 'object'\n}\n\nconst isStringArray = (field:string) => {\n  return Array.isArray(props.form.fields[field]) && typeof(props.form.fields[field][0]) == 'string'\n}\n\nconst route = useRouter();\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_chip = _resolveComponent(\"v-chip\")!\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")!\n  const _component_CommonForm = _resolveComponent(\"CommonForm\")!\n  const _component_CommonWidgets = _resolveComponent(\"CommonWidgets\")!\n  const _component_v_table = _resolveComponent(\"v-table\")!\n  const _component_v_chip_group = _resolveComponent(\"v-chip-group\")!\n\n  return (_ctx.form && _ctx.form.count > 0)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_ctx.headerTitle && _ctx.form)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(template)(_ctx.headerTitle, _ctx.form)), 1))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form.header.label)\n          ? (_openBlock(), _createBlock(_component_v_chip, {\n              key: 1,\n              variant: \"flat\",\n              style: {\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\"}\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.form.header.label), 1)\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form)\n          ? (_openBlock(), _createBlock(_component_v_table, {\n              key: 2,\n              theme: \"dark\"\n            }, {\n              default: _withCtx(() => [\n                (_ctx.formTitle)\n                  ? (_openBlock(), _createElementBlock(\"thead\", _hoisted_3, [\n                      _createElementVNode(\"tr\", null, [\n                        _createElementVNode(\"th\", _hoisted_4, _toDisplayString(_unref(template)(_ctx.formTitle, _ctx.form)), 1)\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(fields), (field) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", null, [\n                      _createElementVNode(\"th\", _hoisted_5, [\n                        _createTextVNode(_toDisplayString(_ctx.form.formHeaders[field].label) + \" Â \", 1),\n                        _createElementVNode(\"a\", {\n                          href: _ctx.form.formHeaders[field].iri,\n                          title: field\n                        }, [\n                          _createVNode(_component_v_icon, { icon: \"mdi-link\" })\n                        ], 8, _hoisted_6),\n                        (_ctx.info)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(field), 1))\n                          : _createCommentVNode(\"\", true)\n                      ]),\n                      (!(field in _unref(registry)))\n                        ? (_openBlock(), _createElementBlock(\"td\", {\n                            key: 0,\n                            class: _normalizeClass(isSubForm(field) ? 'td-nest' : undefined)\n                          }, [\n                            (_ctx.form.fields._meta?.[field]?.type)\n                              ? (_openBlock(), _createBlock(_component_v_chip, {\n                                  key: 0,\n                                  size: \"x-small\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(_toDisplayString(_ctx.form.fields._meta[field].type), 1)\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"div\", {\n                              title: field in _ctx.form.fields._meta! && _ctx.form.fields[field] != _ctx.form.fields._meta![field].value ? _ctx.form.fields._meta![field].value : null\n                            }, [\n                              (field == 'prez:link')\n                                ? (_openBlock(), _createBlock(_component_nuxt_link, {\n                                    key: 0,\n                                    to: _ctx.form.fields[field]\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(_ctx.form.fields[field]), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1032, [\"to\"]))\n                                : _createCommentVNode(\"\", true),\n                              _createTextVNode(\" \" + _toDisplayString((typeof(_ctx.form.fields[field]) != 'object' && field != 'prez:link' ? _ctx.form.fields[field] : '')) + \" \" + _toDisplayString(isStringArray(field) ? _ctx.form.fields[field].join(', ') : '') + \" \", 1),\n                              (isSubForm(field))\n                                ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList(_ctx.form.fields[field], (f) => {\n                                    return (_openBlock(), _createBlock(_component_CommonForm, {\n                                      form: f,\n                                      \"exclude-fields\": _unref(excludeFields)\n                                    }, null, 8, [\"form\", \"exclude-fields\"]))\n                                  }), 256))\n                                : _createCommentVNode(\"\", true)\n                            ], 8, _hoisted_8)\n                          ], 2))\n                        : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [\n                            (field in _unref(registry))\n                              ? (_openBlock(), _createBlock(_component_CommonWidgets, {\n                                  key: 0,\n                                  form: _ctx.form,\n                                  info: _ctx.form.fields[field],\n                                  \"field-name\": field as keyof typeof registry\n                                }, null, 8, [\"form\", \"info\", \"field-name\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]))\n                    ]))\n                  }), 256))\n                ])\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (_ctx.links)\n          ? (_openBlock(), _createBlock(_component_v_chip_group, { key: 3 }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.links.filter(link=>link.title), (link) => {\n                  return (_openBlock(), _createBlock(_component_v_chip, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(link.title), 1)\n                    ]),\n                    _: 2\n                  }, 1024))\n                }), 256))\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true)\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1701229710813,
      "end": 1701229710813
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1701229710813,
      "end": 1701229710813,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1701229710814,
      "end": 1701229710814,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1701229710814,
      "end": 1701229710814,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1701229710814,
      "end": 1701229710814,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-6ce81e14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"form\",\n  style: { \"position\": \"relative\" }\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-h3 mb-5 mt-2\"\n};\nconst _hoisted_3 = { key: 0 };\nconst _hoisted_4 = { colspan: \"2\" };\nconst _hoisted_5 = { style: { \"white-space\": \"nowrap\" } };\nconst _hoisted_6 = [\"href\", \"title\"];\nconst _hoisted_7 = { key: 0 };\nconst _hoisted_8 = [\"title\"];\nconst _hoisted_9 = { key: 1 };\nimport { template } from \"~/helpers/str\";\nimport registry from \"./widgets/registry\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Form\",\n  props: {\n    form: {},\n    formTitle: {},\n    headerTitle: {},\n    excludeFields: {},\n    fields: {},\n    info: { type: Boolean },\n    links: {}\n  },\n  setup(__props) {\n    const props = __props;\n    const excludeFields = props.excludeFields ? props.excludeFields : [/^prez:./];\n    const customWidgets = {};\n    const fields = (props.fields ? props.fields : Object.keys(props.form.formHeaders)).filter((field) => {\n      if (!(field in props.form.formHeaders) || !(field in props.form.fields)) {\n        console.warn(`${field} not found in form\n(${Object.keys(props.form.formHeaders)})`);\n        return false;\n      }\n      if (field in registry) {\n        if (excludeFields.indexOf(field) >= 0) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        for (const idx in excludeFields) {\n          if (field.match(excludeFields[idx])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    });\n    const isSubForm = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"object\";\n    };\n    const isStringArray = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"string\";\n    };\n    const route = useRouter();\n    return (_ctx, _cache) => {\n      const _component_v_chip = _resolveComponent(\"v-chip\");\n      const _component_v_icon = _resolveComponent(\"v-icon\");\n      const _component_nuxt_link = _resolveComponent(\"nuxt-link\");\n      const _component_CommonForm = _resolveComponent(\"CommonForm\");\n      const _component_CommonWidgets = _resolveComponent(\"CommonWidgets\");\n      const _component_v_table = _resolveComponent(\"v-table\");\n      const _component_v_chip_group = _resolveComponent(\"v-chip-group\");\n      return _ctx.form && _ctx.form.count > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _ctx.headerTitle && _ctx.form ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(template)(_ctx.headerTitle, _ctx.form)), 1)) : _createCommentVNode(\"\", true),\n        _ctx.form.header.label ? (_openBlock(), _createBlock(_component_v_chip, {\n          key: 1,\n          variant: \"flat\",\n          style: { \"position\": \"absolute\", \"right\": \"0\", \"top\": \"0\" }\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.form.header.label), 1)\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.form ? (_openBlock(), _createBlock(_component_v_table, {\n          key: 2,\n          theme: \"dark\"\n        }, {\n          default: _withCtx(() => [\n            _ctx.formTitle ? (_openBlock(), _createElementBlock(\"thead\", _hoisted_3, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"th\", _hoisted_4, _toDisplayString(_unref(template)(_ctx.formTitle, _ctx.form)), 1)\n              ])\n            ])) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"tbody\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(fields), (field) => {\n                return _openBlock(), _createElementBlock(\"tr\", null, [\n                  _createElementVNode(\"th\", _hoisted_5, [\n                    _createTextVNode(_toDisplayString(_ctx.form.formHeaders[field].label) + \" Â \", 1),\n                    _createElementVNode(\"a\", {\n                      href: _ctx.form.formHeaders[field].iri,\n                      title: field\n                    }, [\n                      _createVNode(_component_v_icon, { icon: \"mdi-link\" })\n                    ], 8, _hoisted_6),\n                    _ctx.info ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(field), 1)) : _createCommentVNode(\"\", true)\n                  ]),\n                  !(field in _unref(registry)) ? (_openBlock(), _createElementBlock(\"td\", {\n                    key: 0,\n                    class: _normalizeClass(isSubForm(field) ? \"td-nest\" : void 0)\n                  }, [\n                    _ctx.form.fields._meta?.[field]?.type ? (_openBlock(), _createBlock(_component_v_chip, {\n                      key: 0,\n                      size: \"x-small\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.form.fields._meta[field].type), 1)\n                      ]),\n                      _: 2\n                    }, 1024)) : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"div\", {\n                      title: field in _ctx.form.fields._meta && _ctx.form.fields[field] != _ctx.form.fields._meta[field].value ? _ctx.form.fields._meta[field].value : null\n                    }, [\n                      field == \"prez:link\" ? (_openBlock(), _createBlock(_component_nuxt_link, {\n                        key: 0,\n                        to: _ctx.form.fields[field]\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(_ctx.form.fields[field]), 1)\n                        ]),\n                        _: 2\n                      }, 1032, [\"to\"])) : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(typeof _ctx.form.fields[field] != \"object\" && field != \"prez:link\" ? _ctx.form.fields[field] : \"\") + \" \" + _toDisplayString(isStringArray(field) ? _ctx.form.fields[field].join(\", \") : \"\") + \" \", 1),\n                      isSubForm(field) ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList(_ctx.form.fields[field], (f) => {\n                        return _openBlock(), _createBlock(_component_CommonForm, {\n                          form: f,\n                          \"exclude-fields\": _unref(excludeFields)\n                        }, null, 8, [\"form\", \"exclude-fields\"]);\n                      }), 256)) : _createCommentVNode(\"\", true)\n                    ], 8, _hoisted_8)\n                  ], 2)) : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [\n                    field in _unref(registry) ? (_openBlock(), _createBlock(_component_CommonWidgets, {\n                      key: 0,\n                      form: _ctx.form,\n                      info: _ctx.form.fields[field],\n                      \"field-name\": field\n                    }, null, 8, [\"form\", \"info\", \"field-name\"])) : _createCommentVNode(\"\", true)\n                  ]))\n                ]);\n              }), 256))\n            ])\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.links ? (_openBlock(), _createBlock(_component_v_chip_group, { key: 3 }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.links.filter((link) => link.title), (link) => {\n              return _openBlock(), _createBlock(_component_v_chip, null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(link.title), 1)\n                ]),\n                _: 2\n              }, 1024);\n            }), 256))\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)\n      ])) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1701229710814,
      "end": 1701229710914,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/hjohns/workspace/kurrawong/ogc-building-block-api/components/common/Form.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ce81e14\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"form\",\n  style: {\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-h3 mb-5 mt-2\"\n}\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { colspan: \"2\" }\nconst _hoisted_5 = { style: {\"white-space\":\"nowrap\"} }\nconst _hoisted_6 = [\"href\", \"title\"]\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = [\"title\"]\nconst _hoisted_9 = { key: 1 }\n\nimport type { Form, HeaderLink } from '~/lib/prez.d';\nimport { template } from '~/helpers/str';\nimport registry from './widgets/registry';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Form',\n  props: {\n    form: {},\n    formTitle: {},\n    headerTitle: {},\n    excludeFields: {},\n    fields: {},\n    info: { type: Boolean },\n    links: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\nconst excludeFields = props.excludeFields ? props.excludeFields : [/^prez:./];\n\nconst customWidgets:Record<string, boolean>= {};\nconst fields = (props.fields ? props.fields : Object.keys(props.form.formHeaders))\n  .filter(field=>{\n    // check the field to output is available\n    if(!(field in props.form.formHeaders) || !(field in props.form.fields)) {\n      console.warn(`${field} not found in form\\n(${Object.keys(props.form.formHeaders)})`)\n      return false;\n    }\n    // if this field is in the registry, then only exclude if we have an exact match\n    if(field in registry) {\n      if((excludeFields as string[]).indexOf(field) >= 0) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      // check it doesn't match one of the exclude fields\n      for(const idx in excludeFields) {\n        if(field.match(excludeFields[idx])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n\nconst isSubForm = (field:string) => {\n  return Array.isArray(props.form.fields[field]) && typeof(props.form.fields[field][0]) == 'object'\n}\n\nconst isStringArray = (field:string) => {\n  return Array.isArray(props.form.fields[field]) && typeof(props.form.fields[field][0]) == 'string'\n}\n\nconst route = useRouter();\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_chip = _resolveComponent(\"v-chip\")!\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")!\n  const _component_CommonForm = _resolveComponent(\"CommonForm\")!\n  const _component_CommonWidgets = _resolveComponent(\"CommonWidgets\")!\n  const _component_v_table = _resolveComponent(\"v-table\")!\n  const _component_v_chip_group = _resolveComponent(\"v-chip-group\")!\n\n  return (_ctx.form && _ctx.form.count > 0)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        (_ctx.headerTitle && _ctx.form)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(template)(_ctx.headerTitle, _ctx.form)), 1))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form.header.label)\n          ? (_openBlock(), _createBlock(_component_v_chip, {\n              key: 1,\n              variant: \"flat\",\n              style: {\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\"}\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.form.header.label), 1)\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form)\n          ? (_openBlock(), _createBlock(_component_v_table, {\n              key: 2,\n              theme: \"dark\"\n            }, {\n              default: _withCtx(() => [\n                (_ctx.formTitle)\n                  ? (_openBlock(), _createElementBlock(\"thead\", _hoisted_3, [\n                      _createElementVNode(\"tr\", null, [\n                        _createElementVNode(\"th\", _hoisted_4, _toDisplayString(_unref(template)(_ctx.formTitle, _ctx.form)), 1)\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(fields), (field) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", null, [\n                      _createElementVNode(\"th\", _hoisted_5, [\n                        _createTextVNode(_toDisplayString(_ctx.form.formHeaders[field].label) + \" Â \", 1),\n                        _createElementVNode(\"a\", {\n                          href: _ctx.form.formHeaders[field].iri,\n                          title: field\n                        }, [\n                          _createVNode(_component_v_icon, { icon: \"mdi-link\" })\n                        ], 8, _hoisted_6),\n                        (_ctx.info)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(field), 1))\n                          : _createCommentVNode(\"\", true)\n                      ]),\n                      (!(field in _unref(registry)))\n                        ? (_openBlock(), _createElementBlock(\"td\", {\n                            key: 0,\n                            class: _normalizeClass(isSubForm(field) ? 'td-nest' : undefined)\n                          }, [\n                            (_ctx.form.fields._meta?.[field]?.type)\n                              ? (_openBlock(), _createBlock(_component_v_chip, {\n                                  key: 0,\n                                  size: \"x-small\"\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createTextVNode(_toDisplayString(_ctx.form.fields._meta[field].type), 1)\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"div\", {\n                              title: field in _ctx.form.fields._meta! && _ctx.form.fields[field] != _ctx.form.fields._meta![field].value ? _ctx.form.fields._meta![field].value : null\n                            }, [\n                              (field == 'prez:link')\n                                ? (_openBlock(), _createBlock(_component_nuxt_link, {\n                                    key: 0,\n                                    to: _ctx.form.fields[field]\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(_ctx.form.fields[field]), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1032, [\"to\"]))\n                                : _createCommentVNode(\"\", true),\n                              _createTextVNode(\" \" + _toDisplayString((typeof(_ctx.form.fields[field]) != 'object' && field != 'prez:link' ? _ctx.form.fields[field] : '')) + \" \" + _toDisplayString(isStringArray(field) ? _ctx.form.fields[field].join(', ') : '') + \" \", 1),\n                              (isSubForm(field))\n                                ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList(_ctx.form.fields[field], (f) => {\n                                    return (_openBlock(), _createBlock(_component_CommonForm, {\n                                      form: f,\n                                      \"exclude-fields\": _unref(excludeFields)\n                                    }, null, 8, [\"form\", \"exclude-fields\"]))\n                                  }), 256))\n                                : _createCommentVNode(\"\", true)\n                            ], 8, _hoisted_8)\n                          ], 2))\n                        : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [\n                            (field in _unref(registry))\n                              ? (_openBlock(), _createBlock(_component_CommonWidgets, {\n                                  key: 0,\n                                  form: _ctx.form,\n                                  info: _ctx.form.fields[field],\n                                  \"field-name\": field as keyof typeof registry\n                                }, null, 8, [\"form\", \"info\", \"field-name\"]))\n                              : _createCommentVNode(\"\", true)\n                          ]))\n                    ]))\n                  }), 256))\n                ])\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (_ctx.links)\n          ? (_openBlock(), _createBlock(_component_v_chip_group, { key: 3 }, {\n              default: _withCtx(() => [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.links.filter(link=>link.title), (link) => {\n                  return (_openBlock(), _createBlock(_component_v_chip, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(link.title), 1)\n                    ]),\n                    _: 2\n                  }, 1024))\n                }), 256))\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true)\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1701229710914,
      "end": 1701229710914,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701229710915,
      "end": 1701229710915,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701229710915,
      "end": 1701229710915,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1701229710915,
      "end": 1701229710915,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRouter } from '#app/composables/router';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-6ce81e14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"form\",\n  style: { \"position\": \"relative\" }\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-h3 mb-5 mt-2\"\n};\nconst _hoisted_3 = { key: 0 };\nconst _hoisted_4 = { colspan: \"2\" };\nconst _hoisted_5 = { style: { \"white-space\": \"nowrap\" } };\nconst _hoisted_6 = [\"href\", \"title\"];\nconst _hoisted_7 = { key: 0 };\nconst _hoisted_8 = [\"title\"];\nconst _hoisted_9 = { key: 1 };\nimport { template } from \"~/helpers/str\";\nimport registry from \"./widgets/registry\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Form\",\n  props: {\n    form: {},\n    formTitle: {},\n    headerTitle: {},\n    excludeFields: {},\n    fields: {},\n    info: { type: Boolean },\n    links: {}\n  },\n  setup(__props) {\n    const props = __props;\n    const excludeFields = props.excludeFields ? props.excludeFields : [/^prez:./];\n    const customWidgets = {};\n    const fields = (props.fields ? props.fields : Object.keys(props.form.formHeaders)).filter((field) => {\n      if (!(field in props.form.formHeaders) || !(field in props.form.fields)) {\n        console.warn(`${field} not found in form\n(${Object.keys(props.form.formHeaders)})`);\n        return false;\n      }\n      if (field in registry) {\n        if (excludeFields.indexOf(field) >= 0) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        for (const idx in excludeFields) {\n          if (field.match(excludeFields[idx])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    });\n    const isSubForm = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"object\";\n    };\n    const isStringArray = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"string\";\n    };\n    const route = useRouter();\n    return (_ctx, _cache) => {\n      const _component_v_chip = _resolveComponent(\"v-chip\");\n      const _component_v_icon = _resolveComponent(\"v-icon\");\n      const _component_nuxt_link = _resolveComponent(\"nuxt-link\");\n      const _component_CommonForm = _resolveComponent(\"CommonForm\");\n      const _component_CommonWidgets = _resolveComponent(\"CommonWidgets\");\n      const _component_v_table = _resolveComponent(\"v-table\");\n      const _component_v_chip_group = _resolveComponent(\"v-chip-group\");\n      return _ctx.form && _ctx.form.count > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _ctx.headerTitle && _ctx.form ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(template)(_ctx.headerTitle, _ctx.form)), 1)) : _createCommentVNode(\"\", true),\n        _ctx.form.header.label ? (_openBlock(), _createBlock(_component_v_chip, {\n          key: 1,\n          variant: \"flat\",\n          style: { \"position\": \"absolute\", \"right\": \"0\", \"top\": \"0\" }\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.form.header.label), 1)\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.form ? (_openBlock(), _createBlock(_component_v_table, {\n          key: 2,\n          theme: \"dark\"\n        }, {\n          default: _withCtx(() => [\n            _ctx.formTitle ? (_openBlock(), _createElementBlock(\"thead\", _hoisted_3, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"th\", _hoisted_4, _toDisplayString(_unref(template)(_ctx.formTitle, _ctx.form)), 1)\n              ])\n            ])) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"tbody\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(fields), (field) => {\n                return _openBlock(), _createElementBlock(\"tr\", null, [\n                  _createElementVNode(\"th\", _hoisted_5, [\n                    _createTextVNode(_toDisplayString(_ctx.form.formHeaders[field].label) + \" Â \", 1),\n                    _createElementVNode(\"a\", {\n                      href: _ctx.form.formHeaders[field].iri,\n                      title: field\n                    }, [\n                      _createVNode(_component_v_icon, { icon: \"mdi-link\" })\n                    ], 8, _hoisted_6),\n                    _ctx.info ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(field), 1)) : _createCommentVNode(\"\", true)\n                  ]),\n                  !(field in _unref(registry)) ? (_openBlock(), _createElementBlock(\"td\", {\n                    key: 0,\n                    class: _normalizeClass(isSubForm(field) ? \"td-nest\" : void 0)\n                  }, [\n                    _ctx.form.fields._meta?.[field]?.type ? (_openBlock(), _createBlock(_component_v_chip, {\n                      key: 0,\n                      size: \"x-small\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.form.fields._meta[field].type), 1)\n                      ]),\n                      _: 2\n                    }, 1024)) : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"div\", {\n                      title: field in _ctx.form.fields._meta && _ctx.form.fields[field] != _ctx.form.fields._meta[field].value ? _ctx.form.fields._meta[field].value : null\n                    }, [\n                      field == \"prez:link\" ? (_openBlock(), _createBlock(_component_nuxt_link, {\n                        key: 0,\n                        to: _ctx.form.fields[field]\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(_ctx.form.fields[field]), 1)\n                        ]),\n                        _: 2\n                      }, 1032, [\"to\"])) : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(typeof _ctx.form.fields[field] != \"object\" && field != \"prez:link\" ? _ctx.form.fields[field] : \"\") + \" \" + _toDisplayString(isStringArray(field) ? _ctx.form.fields[field].join(\", \") : \"\") + \" \", 1),\n                      isSubForm(field) ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList(_ctx.form.fields[field], (f) => {\n                        return _openBlock(), _createBlock(_component_CommonForm, {\n                          form: f,\n                          \"exclude-fields\": _unref(excludeFields)\n                        }, null, 8, [\"form\", \"exclude-fields\"]);\n                      }), 256)) : _createCommentVNode(\"\", true)\n                    ], 8, _hoisted_8)\n                  ], 2)) : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [\n                    field in _unref(registry) ? (_openBlock(), _createBlock(_component_CommonWidgets, {\n                      key: 0,\n                      form: _ctx.form,\n                      info: _ctx.form.fields[field],\n                      \"field-name\": field\n                    }, null, 8, [\"form\", \"info\", \"field-name\"])) : _createCommentVNode(\"\", true)\n                  ]))\n                ]);\n              }), 256))\n            ])\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.links ? (_openBlock(), _createBlock(_component_v_chip_group, { key: 3 }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.links.filter((link) => link.title), (link) => {\n              return _openBlock(), _createBlock(_component_v_chip, null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(link.title), 1)\n                ]),\n                _: 2\n              }, 1024);\n            }), 256))\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)\n      ])) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1701229710915,
      "end": 1701229710916,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllhF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtvlE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpxvnM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxtlJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxxppJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { default as __nuxt_component_1 } from \"/Users/hjohns/workspace/kurrawong/ogc-building-block-api/components/common/Form.vue\";\nimport { default as __nuxt_component_2 } from \"/Users/hjohns/workspace/kurrawong/ogc-building-block-api/components/common/widgets/index.vue\";\nimport { useRouter } from '#app/composables/router';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-6ce81e14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"form\",\n  style: { \"position\": \"relative\" }\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-h3 mb-5 mt-2\"\n};\nconst _hoisted_3 = { key: 0 };\nconst _hoisted_4 = { colspan: \"2\" };\nconst _hoisted_5 = { style: { \"white-space\": \"nowrap\" } };\nconst _hoisted_6 = [\"href\", \"title\"];\nconst _hoisted_7 = { key: 0 };\nconst _hoisted_8 = [\"title\"];\nconst _hoisted_9 = { key: 1 };\nimport { template } from \"~/helpers/str\";\nimport registry from \"./widgets/registry\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Form\",\n  props: {\n    form: {},\n    formTitle: {},\n    headerTitle: {},\n    excludeFields: {},\n    fields: {},\n    info: { type: Boolean },\n    links: {}\n  },\n  setup(__props) {\n    const props = __props;\n    const excludeFields = props.excludeFields ? props.excludeFields : [/^prez:./];\n    const customWidgets = {};\n    const fields = (props.fields ? props.fields : Object.keys(props.form.formHeaders)).filter((field) => {\n      if (!(field in props.form.formHeaders) || !(field in props.form.fields)) {\n        console.warn(`${field} not found in form\n(${Object.keys(props.form.formHeaders)})`);\n        return false;\n      }\n      if (field in registry) {\n        if (excludeFields.indexOf(field) >= 0) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        for (const idx in excludeFields) {\n          if (field.match(excludeFields[idx])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    });\n    const isSubForm = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"object\";\n    };\n    const isStringArray = (field) => {\n      return Array.isArray(props.form.fields[field]) && typeof props.form.fields[field][0] == \"string\";\n    };\n    const route = useRouter();\n    return (_ctx, _cache) => {\n      const _component_v_chip = _resolveComponent(\"v-chip\");\n      const _component_v_icon = _resolveComponent(\"v-icon\");\n      const _component_nuxt_link = __nuxt_component_0;\n      const _component_CommonForm = __nuxt_component_1;\n      const _component_CommonWidgets = __nuxt_component_2;\n      const _component_v_table = _resolveComponent(\"v-table\");\n      const _component_v_chip_group = _resolveComponent(\"v-chip-group\");\n      return _ctx.form && _ctx.form.count > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _ctx.headerTitle && _ctx.form ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(template)(_ctx.headerTitle, _ctx.form)), 1)) : _createCommentVNode(\"\", true),\n        _ctx.form.header.label ? (_openBlock(), _createBlock(_component_v_chip, {\n          key: 1,\n          variant: \"flat\",\n          style: { \"position\": \"absolute\", \"right\": \"0\", \"top\": \"0\" }\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.form.header.label), 1)\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.form ? (_openBlock(), _createBlock(_component_v_table, {\n          key: 2,\n          theme: \"dark\"\n        }, {\n          default: _withCtx(() => [\n            _ctx.formTitle ? (_openBlock(), _createElementBlock(\"thead\", _hoisted_3, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"th\", _hoisted_4, _toDisplayString(_unref(template)(_ctx.formTitle, _ctx.form)), 1)\n              ])\n            ])) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"tbody\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(fields), (field) => {\n                return _openBlock(), _createElementBlock(\"tr\", null, [\n                  _createElementVNode(\"th\", _hoisted_5, [\n                    _createTextVNode(_toDisplayString(_ctx.form.formHeaders[field].label) + \" Â \", 1),\n                    _createElementVNode(\"a\", {\n                      href: _ctx.form.formHeaders[field].iri,\n                      title: field\n                    }, [\n                      _createVNode(_component_v_icon, { icon: \"mdi-link\" })\n                    ], 8, _hoisted_6),\n                    _ctx.info ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(field), 1)) : _createCommentVNode(\"\", true)\n                  ]),\n                  !(field in _unref(registry)) ? (_openBlock(), _createElementBlock(\"td\", {\n                    key: 0,\n                    class: _normalizeClass(isSubForm(field) ? \"td-nest\" : void 0)\n                  }, [\n                    _ctx.form.fields._meta?.[field]?.type ? (_openBlock(), _createBlock(_component_v_chip, {\n                      key: 0,\n                      size: \"x-small\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.form.fields._meta[field].type), 1)\n                      ]),\n                      _: 2\n                    }, 1024)) : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"div\", {\n                      title: field in _ctx.form.fields._meta && _ctx.form.fields[field] != _ctx.form.fields._meta[field].value ? _ctx.form.fields._meta[field].value : null\n                    }, [\n                      field == \"prez:link\" ? (_openBlock(), _createBlock(_component_nuxt_link, {\n                        key: 0,\n                        to: _ctx.form.fields[field]\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(_ctx.form.fields[field]), 1)\n                        ]),\n                        _: 2\n                      }, 1032, [\"to\"])) : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(typeof _ctx.form.fields[field] != \"object\" && field != \"prez:link\" ? _ctx.form.fields[field] : \"\") + \" \" + _toDisplayString(isStringArray(field) ? _ctx.form.fields[field].join(\", \") : \"\") + \" \", 1),\n                      isSubForm(field) ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList(_ctx.form.fields[field], (f) => {\n                        return _openBlock(), _createBlock(_component_CommonForm, {\n                          form: f,\n                          \"exclude-fields\": _unref(excludeFields)\n                        }, null, 8, [\"form\", \"exclude-fields\"]);\n                      }), 256)) : _createCommentVNode(\"\", true)\n                    ], 8, _hoisted_8)\n                  ], 2)) : (_openBlock(), _createElementBlock(\"td\", _hoisted_9, [\n                    field in _unref(registry) ? (_openBlock(), _createBlock(_component_CommonWidgets, {\n                      key: 0,\n                      form: _ctx.form,\n                      info: _ctx.form.fields[field],\n                      \"field-name\": field\n                    }, null, 8, [\"form\", \"info\", \"field-name\"])) : _createCommentVNode(\"\", true)\n                  ]))\n                ]);\n              }), 256))\n            ])\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true),\n        _ctx.links ? (_openBlock(), _createBlock(_component_v_chip_group, { key: 3 }, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.links.filter((link) => link.title), (link) => {\n              return _openBlock(), _createBlock(_component_v_chip, null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(link.title), 1)\n                ]),\n                _: 2\n              }, 1024);\n            }), 256))\n          ]),\n          _: 1\n        })) : _createCommentVNode(\"\", true)\n      ])) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1701229710916,
      "end": 1701229710916,
      "order": "normal"
    }
  ]
}
