{
  "resolvedId": "/Users/hjohns/workspace/kurrawong/ogc-building-block-api/pages/catalogs/[id]/collections/[collectionId]/items/index.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\nimport { ref } from 'vue';\nimport config from '~/config';\nimport { tpl } from '~/helpers/str';\nconst route = useRoute();\nconst id = ref(route.params.id);\nconst collectionId = ref(route.params.collectionId);\n</script>\n\n<template>\n  <CommonBreadcrumbs :items=\"[\n    {title: tpl('{{!bc}}Home'), to: '/'},\n    {title: tpl('{{!bc}}Catalogs'), to: '/catalogs'},\n    {title: `${id}`, to: `/catalogs/${id}`},\n    {title: tpl('{{!bc}}Collections'), to: `/catalogs/${id}/collections`},\n    {title: `${collectionId}`, to: `/catalogs/${id}/collections/${collectionId}`},\n    {title: tpl('{{!bc}}Items'), to: route.path, disabled: true}\n  ]\" />\n\n  <ContainersList \n    header-title=\"{{ header.label }} collection\"\n    :data-url=\"config.API_BASE_URL + route.path\"\n    :fields=\"['rdfs:label', 'dcterms:identifier', 'iri']\"\n  />\n</template>\n",
      "start": 1701230368238,
      "end": 1701230369213,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701230369213,
      "end": 1701230369213,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref } from 'vue';\nimport config from '~/config';\nimport { tpl } from '~/helpers/str';\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst route = useRoute();\nconst id = ref(route.params.id);\nconst collectionId = ref(route.params.collectionId);\n\nreturn (_ctx, _cache) => {\n  const _component_CommonBreadcrumbs = _resolveComponent(\"CommonBreadcrumbs\")\n  const _component_ContainersList = _resolveComponent(\"ContainersList\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_CommonBreadcrumbs, {\n      items: [\n    {title: _unref(tpl)('{{!bc}}Home'), to: '/'},\n    {title: _unref(tpl)('{{!bc}}Catalogs'), to: '/catalogs'},\n    {title: `${id.value}`, to: `/catalogs/${id.value}`},\n    {title: _unref(tpl)('{{!bc}}Collections'), to: `/catalogs/${id.value}/collections`},\n    {title: `${collectionId.value}`, to: `/catalogs/${id.value}/collections/${collectionId.value}`},\n    {title: _unref(tpl)('{{!bc}}Items'), to: _unref(route).path, disabled: true}\n  ]\n    }, null, 8, [\"items\"]),\n    _createVNode(_component_ContainersList, {\n      \"header-title\": \"{{ header.label }} collection\",\n      \"data-url\": _unref(config).API_BASE_URL + _unref(route).path,\n      fields: ['rdfs:label', 'dcterms:identifier', 'iri']\n    }, null, 8, [\"data-url\"])\n  ], 64))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1701230369213,
      "end": 1701230369215,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { ref } from 'vue';\nimport config from '~/config';\nimport { tpl } from '~/helpers/str';\n\nconst _sfc_main = {\n  __name: 'index',\n  setup(__props) {\n\nconst route = useRoute();\nconst id = ref(route.params.id);\nconst collectionId = ref(route.params.collectionId);\n\nreturn (_ctx, _cache) => {\n  const _component_CommonBreadcrumbs = _resolveComponent(\"CommonBreadcrumbs\")\n  const _component_ContainersList = _resolveComponent(\"ContainersList\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_CommonBreadcrumbs, {\n      items: [\n    {title: _unref(tpl)('{{!bc}}Home'), to: '/'},\n    {title: _unref(tpl)('{{!bc}}Catalogs'), to: '/catalogs'},\n    {title: `${id.value}`, to: `/catalogs/${id.value}`},\n    {title: _unref(tpl)('{{!bc}}Collections'), to: `/catalogs/${id.value}/collections`},\n    {title: `${collectionId.value}`, to: `/catalogs/${id.value}/collections/${collectionId.value}`},\n    {title: _unref(tpl)('{{!bc}}Items'), to: _unref(route).path, disabled: true}\n  ]\n    }, null, 8, [\"items\"]),\n    _createVNode(_component_ContainersList, {\n      \"header-title\": \"{{ header.label }} collection\",\n      \"data-url\": _unref(config).API_BASE_URL + _unref(route).path,\n      fields: ['rdfs:label', 'dcterms:identifier', 'iri']\n    }, null, 8, [\"data-url\"])\n  ], 64))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingspM;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC;AACD,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;AAAA"
      }
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1701230369215,
      "end": 1701230369215,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1701230369215,
      "end": 1701230369216,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1701230369216,
      "end": 1701230369216,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1701230369216,
      "end": 1701230369216,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1701230369216,
      "end": 1701230369216,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1701230369216,
      "end": 1701230369216,
      "order": "normal"
    }
  ]
}
