{
  "resolvedId": "/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n",
      "start": 1701230371103,
      "end": 1701230371154,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1701230371154,
      "end": 1701230371154,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1701230371154,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/n3/node_modules/readable-stream/lib/ours/primordials.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/buffer/index.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/Users/hjohns/workspace/kurrawong/ogc-building-block-api/node_modules/n3/node_modules/readable-stream/lib/ours/util.js?commonjs-proxy\";\n\n'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require$$0\nconst { Buffer } = require$$1\nconst { inspect } = require$$2\nvar buffer_list = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(buffer_list);\nexport { buffer_list as __moduleExports };",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;AAAA,YAAY;AACZ;AACA,MAAM,EAAE,oBAAoB,EAAE,cAAc,EAAE,sBAAsB,EAAE,UAAU,EAAE,GAAG,UAAiC;AACtH,MAAM,EAAE,MAAM,EAAE,GAAG,UAAiB;AACpC,MAAM,EAAE,OAAO,EAAE,GAAG,UAA0B;IAC9C,WAAc,GAAG,MAAM,UAAU,CAAC;AAClC,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI;AACpB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI;AACpB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;AACnB,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,EAAE;AACV,IAAI,MAAM,KAAK,GAAG;AAClB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,IAAI,EAAE,IAAI;AAChB,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK;AAC/C,SAAS,IAAI,CAAC,IAAI,GAAG,KAAK;AAC1B,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK;AACrB,IAAI,EAAE,IAAI,CAAC,MAAM;AACjB,GAAG;AACH,EAAE,OAAO,CAAC,CAAC,EAAE;AACb,IAAI,MAAM,KAAK,GAAG;AAClB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK;AAC5C,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK;AACrB,IAAI,EAAE,IAAI,CAAC,MAAM;AACjB,GAAG;AACH,EAAE,KAAK,GAAG;AACV,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACjC,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;AAC9B,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI;AACvD,SAAS,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;AACnC,IAAI,EAAE,IAAI,CAAC,MAAM;AACjB,IAAI,OAAO,GAAG;AACd,GAAG;AACH,EAAE,KAAK,GAAG;AACV,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI;AAChC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;AACnB,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,EAAE;AACV,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;AACpC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;AACrB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI;AACzB,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI;AACnD,IAAI,OAAO,GAAG;AACd,GAAG;AACH,EAAE,MAAM,CAAC,CAAC,EAAE;AACZ,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACjD,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3C,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;AACrB,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,OAAO,CAAC,EAAE;AACd,MAAM,sBAAsB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5C,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM;AACxB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI;AAChB,KAAK;AACL,IAAI,OAAO,GAAG;AACd,GAAG;AACH;AACA;AACA,EAAE,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE;AACzB,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;AAC/B,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;AACzB;AACA,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACpC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,MAAM,OAAO,KAAK;AAClB,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;AAC3B;AACA,MAAM,OAAO,IAAI,CAAC,KAAK,EAAE;AACzB,KAAK;AACL;AACA,IAAI,OAAO,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC/D,GAAG;AACH,EAAE,KAAK,GAAG;AACV,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI;AACzB,GAAG;AACH,EAAE,EAAE,cAAc,CAAC,GAAG;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AAC3C,MAAM,MAAM,CAAC,CAAC,IAAI;AAClB,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,UAAU,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,GAAG,GAAG,EAAE;AAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;AACrB,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,GAAG;AACP,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI;AACxB,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;AAC1B,QAAQ,GAAG,IAAI,GAAG;AAClB,QAAQ,CAAC,IAAI,GAAG,CAAC,MAAM;AACvB,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE;AAC9B,UAAU,GAAG,IAAI,GAAG;AACpB,UAAU,EAAE,CAAC;AACb,UAAU,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;AACxC,eAAe,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI;AAC3C,SAAS,MAAM;AACf,UAAU,GAAG,IAAI,oBAAoB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAChD,UAAU,IAAI,CAAC,IAAI,GAAG,CAAC;AACvB,UAAU,CAAC,CAAC,IAAI,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC;AAC/C,SAAS;AACT,QAAQ,KAAK;AACb,OAAO;AACP,MAAM,EAAE,CAAC;AACT,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC;AACnC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AACpB,IAAI,OAAO,GAAG;AACd,GAAG;AACH;AACA;AACA,EAAE,UAAU,CAAC,CAAC,EAAE;AAChB,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACrC,IAAI,MAAM,MAAM,GAAG,CAAC;AACpB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;AACrB,IAAI,IAAI,CAAC,GAAG,CAAC;AACb,IAAI,GAAG;AACP,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI;AACxB,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;AAC1B,QAAQ,sBAAsB,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC;AACpD,QAAQ,CAAC,IAAI,GAAG,CAAC,MAAM;AACvB,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE;AAC9B,UAAU,sBAAsB,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC;AACtD,UAAU,EAAE,CAAC;AACb,UAAU,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;AACxC,eAAe,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI;AAC3C,SAAS,MAAM;AACf,UAAU,sBAAsB,CAAC,GAAG,EAAE,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;AAChG,UAAU,IAAI,CAAC,IAAI,GAAG,CAAC;AACvB,UAAU,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/B,SAAS;AACT,QAAQ,KAAK;AACb,OAAO;AACP,MAAM,EAAE,CAAC;AACT,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC;AACnC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AACpB,IAAI,OAAO,GAAG;AACd,GAAG;AACH;AACA;AACA,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;AACzD,IAAI,OAAO,OAAO,CAAC,IAAI,EAAE;AACzB,MAAM,GAAG,OAAO;AAChB;AACA,MAAM,KAAK,EAAE,CAAC;AACd;AACA,MAAM,aAAa,EAAE,KAAK;AAC1B,KAAK,CAAC;AACN,GAAG;AACH"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1701230371155,
      "end": 1701230371155,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1701230371155,
      "end": 1701230371156,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1701230371156,
      "end": 1701230371156,
      "order": "normal"
    }
  ]
}
