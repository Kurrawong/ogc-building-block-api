{"version":3,"file":"debug-ef1a5826.js","sources":["../../../../pages/debug.vue"],"sourcesContent":["<script setup>\nimport { useRDFStore } from \"@/stores/rdf\";\nimport { storeToRefs } from \"pinia\";\n\nconst rdfStore = useRDFStore()\nconst { loading, success, error, prefixes, prez } = storeToRefs(rdfStore)\n\nconst matchall = ref([]);\n\nconst subject = ref('');\nconst predicate = ref('');\nconst object = ref('');\nconst url = ref('https://api.gswa.dev.kurrawong.ai/v/vocab/df:vertical-depth-reference-systems')\n\nonMounted(async ()=> {\n  await rdfStore.load(url.value);\n  console.log('mounted')\n  //await vocabStore.fetchAndParse();\n  loadStuff();\n})\n\nasync function reload() {\n  await rdfStore.load(url.value);\n  loadStuff();\n}\n\nconst countRef = ref(0);\nconst dataRef = ref({});\n\nfunction loadStuff() {\n  console.log(\"LOAD\")\n  matchall.value = prez.value.store.getQuads(null, null, null, null);\n  console.log(\"MATCH\")\n  const countData = prez.value.firstQuad(null, 'prez:count', null, null);\n  console.log(\"COUNT\")\n  if(countData !== null) {\n    countRef.value = countData.object.value;\n    const lookupFilter = rdfStore.getPrefixExpandedFilter({predicate: 'rdf:type', object: countData.subject.value});\n//    alert(loaderStore.prefixer('rdf:type'));\n    dataRef.value = rdfStore.store.getSubjects(lookupFilter.predicate, countData[0].subject, null);\n    //dataRef.value = loaderStore.getMatchedData({predicate: 'rdf:type', object: countData[0].subject})\n  }\n}\n\nfunction update() {\n  matchall.value = prez.value.store.getQuads(\n    subject.value != '' ? subject.value : null, \n    predicate.value != '' ? predicate.value : null,\n    object.value != '' ? object.value : null, null);  \n}\n\n</script>\n\n<template>\n  <div>COUNT = {{ countRef }}</div>\n  <div>DATA = {{ dataRef }}</div>\n  <div>\n    <h1>Vocab listing</h1>\n\n    <form method=\"post\" v-on:submit=\"(e)=>{ e.preventDefault(); update()}\">\n      <div>\n        <input placeholder=\"url\" name=\"url\" v-model=\"url\" style=\"width:500px;\" />\n        <button type=\"button\" v-on:click=\"reload()\">Reload</button>\n      </div>\n      <div>\n        <input placeholder=\"subject\" name=\"subject\" v-model=\"subject\" />\n        <input placeholder=\"predicate\" name=\"predict\" v-model=\"predicate\" />\n        <input placeholder=\"object\" name=\"object\" v-model=\"object\" />\n      </div>\n      <div>\n        <button type=\"submit\">Refresh</button>\n      </div>\n    </form>\n    {{ subject }} - {{ predicate }} - {{ object }}\n\n    <div>\n      <div>Loading = {{ loading }}</div>\n      <div>Error = {{ error }}</div>\n      <div>Success = {{ success }}</div>\n    </div>\n\n    <h2>Prefixes</h2>\n    {{ prefixes }}\n\n\n    <h2>Match All</h2>\n    <table>\n      <thead><tr><th>subject</th><th>predicate</th><th>object</th></tr></thead>\n      <tbody>\n        <tr v-for=\"(m, idx) in matchall\">\n          <td>{{ idx }}# {{ m.subject.value }}</td>\n          <td>{{ m.predicate.value }}</td>\n          <td>{{ m.object.value }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,UAAM,WAAW,YAAa;AAC9B,UAAM,EAAE,SAAS,SAAS,OAAO,UAAU,KAAM,IAAG,YAAY,QAAQ;AAExE,UAAM,WAAW,IAAI,CAAA,CAAE;AAEvB,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,YAAY,IAAI,EAAE;AACxB,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,MAAM,IAAI,+EAA+E;AAc/F,UAAM,WAAW,IAAI,CAAC;AACtB,UAAM,UAAU,IAAI,CAAA,CAAE;;;;;;;;;;;;;;;;"}